<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd">

<!--    1. 查询容器中的EntityManagerFactory，
2. 并处理@PersistenceUnit和@PersistenceContext
3. 生成代理的EntityManager对象-->
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"></bean>
    <!-- 以下：将创建缺省的PersistenceAnnotationBeanPostProcessor   -->
<!--    <context:annotation-config></context:annotation-config>-->

    <jpa:repositories base-package="cn.johnyu.springjpahibernatexml.repository"
    transaction-manager-ref="transactionManager" entity-manager-factory-ref="entityManagerFactory"></jpa:repositories>
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql://johnyu.cn:3306/test?autoReconnect=true"></property>
        <property name="password" value="123"></property>
        <property name="username" value="john"></property>
    </bean>

    <bean id="hibernateJpaVendorAdapter"
          class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="database" value="MYSQL"></property>
        <property name="generateDdl" value="true"></property>

        <property name="showSql" value="true"></property>
        <property name="databasePlatform" value="org.hibernate.dialect.MySQL5Dialect"/>
    </bean>


    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <!-- entityManagerFactory 内部 -->
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
        <property name="packagesToScan" value="cn.johnyu.springjpahibernatexml.pojo" />

<!--        指定持久化单元的名字，如果使用的是LocalEntityManagerFactoryBean，将指定persistence.xml中的persistence-unit-->

<!--        <property name="persistenceUnitName" value="entityManager"></property>-->

<!--        <property name="jpaProperties">-->
<!--            <props>-->
<!--                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>-->
<!--                <prop key="hibernate.show_sql">true</prop>-->
<!--                <prop key="hibernate.hbm2ddl.auto">create</prop>-->
<!--            </props>-->
<!--        </property>-->
    </bean>

    <bean class="cn.johnyu.springjpahibernatexml.dao.BookDaoImpl"></bean>

    <!-- Jpa 事务配置 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <!-- 对使用@Transactional的方法启用AOP proxy-target-class:表示是否对“目标类”启用代理。true:表示使用cglib方式(类)，false:表示使用Proxy方式（接口） -->
<!--    相当于配置中的@EnableTransactionManagement(proxyTargetClass = false)-->
    <tx:annotation-driven transaction-manager="transactionManager"
                          proxy-target-class="false" />

<!--  可选配置   JPA引擎在工作期间发生的所有异常，统一包装成为Spring的异常-->
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"></bean>

</beans>